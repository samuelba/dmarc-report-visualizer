# Database Configuration
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=dmarc
DB_SYNCHRONIZE=false
DB_MIGRATIONS_RUN=true

# PostgreSQL Configuration (for docker-compose)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=dmarc

# Backup Configuration
# Directory where database backups are stored
BACKUP_DIR=./backups
# Whether backup failure should prevent application startup (default: true)
BACKUP_MANDATORY=true
# Number of recent backups to keep (default: 10)
BACKUP_KEEP_COUNT=10

# Application Configuration
NODE_ENV=production
PORT=3000

# CORS Configuration
# Comma-separated list of allowed origins, or * for all origins
CORS_ORIGINS=http://localhost

# Frontend Configuration
FRONTEND_PORT=80

# File Watcher Configuration
# Set to true to enable automatic processing of files dropped in FILE_WATCH_DIR
ENABLE_FILE_WATCHER=false
FILE_WATCH_DIR=reports/incoming
FILE_WATCH_DELETE_PROCESSED=true
FILE_WATCH_VERBOSE=false

# Gmail Downloader Configuration
# Set to true to enable automatic downloading and processing of DMARC reports from Gmail
ENABLE_GMAIL_DOWNLOADER=false

# Gmail Authentication Mode
# Options: oauth (recommended for user accounts), service_account (for Google Workspace with domain-wide delegation)
GMAIL_AUTH_MODE=oauth

# Gmail OAuth Configuration (when GMAIL_AUTH_MODE=oauth)
# Required: Create OAuth 2.0 credentials in Google Cloud Console
# Use scripts/oauth_get_refresh_token.js to obtain the refresh token
GMAIL_OAUTH_CLIENT_ID=your-client-id.apps.googleusercontent.com
GMAIL_OAUTH_CLIENT_SECRET=your-client-secret
GMAIL_OAUTH_REFRESH_TOKEN=your-refresh-token
GMAIL_OAUTH_REDIRECT_URI=http://localhost

# Gmail Service Account Configuration (when GMAIL_AUTH_MODE=service_account)
# Option 1: Provide credentials directly in environment variables
GMAIL_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GMAIL_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nYour private key here\n-----END PRIVATE KEY-----
GMAIL_DELEGATED_USER=user@yourdomain.com

# Option 2: Provide path to service account JSON file
# If set, this will override GMAIL_CLIENT_EMAIL and GMAIL_PRIVATE_KEY
GMAIL_CREDENTIALS_JSON_PATH=path/to/service-account-credentials.json

# Gmail Labels Configuration
# The label to search for incoming DMARC reports
GMAIL_LABEL=DMARC Reports
# The label to apply to successfully processed messages
GMAIL_PROCESSED_LABEL=DMARC Processed
# The label to apply to messages that failed processing after GMAIL_FAILURE_THRESHOLD attempts
GMAIL_FAILED_LABEL=DMARC Failed

# Gmail Processing Configuration
# Polling interval in milliseconds (default: 300000 = 5 minutes)
GMAIL_POLL_INTERVAL_MS=300000
# Number of messages to fetch per page (1-500, default: 100)
GMAIL_LIST_PAGE_SIZE=100
# Gmail query string to filter messages (default includes messages with attachments from last 5 days)
GMAIL_QUERY=has:attachment newer_than:5d -label:"DMARC Processed"
# Process attachments inline instead of saving to FILE_WATCH_DIR (default: true)
GMAIL_PROCESS_INLINE=true
# Save original attachments to reports/processed/success after inline processing (default: false)
GMAIL_SAVE_ORIGINAL=false
# Remove source label after processing (default: true)
GMAIL_REMOVE_SOURCE_LABEL=true
# Number of processing failures before applying GMAIL_FAILED_LABEL (default: 3)
GMAIL_FAILURE_THRESHOLD=3

# Reprocessing Configuration
REPROCESSING_WORKERS=1
